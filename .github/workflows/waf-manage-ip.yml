name: Gerenciar IPs no WAF

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Selecione o ambiente'
        type: choice
        required: true
        options:
          - development
          - production
      ip_address:
        description: 'IPs a serem adicionados ou removidos (ex: 192.168.0.1/32 ou 192.168.0.1/32,192.168.0.2/32)'
        required: true
      action:
        description: 'Escolha a ação desejada (adicionar ou remover)'
        required: true
        type: choice
        options:
          - adicionar
          - remover
        default: adicionar

permissions:
  id-token: write
  contents: read

jobs:
  update-waf-ip:
    runs-on: ubuntu-24.04
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Instala dependências
        run: |
          pip install -r requirements.txt

      - name: Atualiza IPSet no WAF
        env:
          AWS_WAF_COUNTRY_EXCEPTIONS_LIST_ID: ${{ secrets.AWS_WAF_COUNTRY_EXCEPTIONS_LIST_ID }}
          AWS_WAF_COUNTRY_EXCEPTIONS_LIST_NAME: ${{ secrets.AWS_WAF_COUNTRY_EXCEPTIONS_LIST_NAME }}
          AWS_WAF_MALICIOUS_LIST_ID: ${{ secrets.AWS_WAF_MALICIOUS_LIST_ID }}
          AWS_WAF_MALICIOUS_LIST_NAME: ${{ secrets.AWS_WAF_MALICIOUS_LIST_NAME }}
        run: |
          python update_ipset.py "${{ github.event.inputs.ip_address }}" "${{ github.event.inputs.action }}"